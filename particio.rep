nat max_grup;   //numero màxim de GRUPS
nat n_max;  //numero màxim de NODES
nat n_elem;       // Nombre de nodes del subarbre
T arrelem;      //Array de representants
struct node {
  T _k;      // Clau
  node* _esq;   // fill esquerre
  node* _dret;  // fill dret
  nat alt_max;
};
node *_arrel;

/////////////////////////
//// METODES PRIVATS////
///////////////////////

//Mètode Constructora
node* copia_particio(node *n);
void destrueix_particio(node* p);

///Mètodes d'afegir
node* insereix_avl(node *n, const T &k);
node* newNode(T k);
static nat altura_max(node *n);
static T max(T a, T b);
static nat factor_eq(node *n);
static node* rightRotate(node *y);
static node* leftRotate(node *x);

//Mètode MFset
node* preOrdre(node *n,T arrelem[], int i);
void mfset(nat ne);  //constructora del array amb els representants
T find(T e) throw(error);    //Busca si e és un representant
